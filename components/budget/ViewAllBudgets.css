@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap');


/* General container styles */
div {
  margin: 20px;
  padding: 20px;
  background-color: #f9f9f9;
  border-radius: 8px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
}

.budget-container {
  margin: 20px auto;
  padding: 30px;
  background: linear-gradient(135deg, #f5f7fa, #e4ebf1);
  border-radius: 12px;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
  max-width: 900px;
  font-family: 'Poppins', sans-serif;
}

.budget-header h1 {
  font-family: 'Montserrat', sans-serif; /* Use Montserrat font */
  font-weight: 600;  /* Semi-bold for a sleek look */
  font-size: 2.5rem; /* Large font size for emphasis */
  text-align: center; /* Center the text */
  color: #222; /* Dark grey for modern contrast */
  letter-spacing: 1.5px; /* Slight spacing for a clean look */
  margin-bottom: 20px;
  text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
  background: linear-gradient(135deg, #007bff, #00c6ff); /* Subtle gradient text */
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent; /* Transparent fill for gradient effect */
}


/* Filter input styling */
input[type="text"] {
  width: 100%;
  padding: 12px;
  margin-bottom: 20px;
  border-radius: 8px;
  border: 1px solid #bbb;
  font-size: 1rem;
  font-family: 'Poppins', sans-serif;
  box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.05);
  transition: border-color 0.3s;
}

input[type="text"]:focus {
  border-color: #007bff;
  outline: none;
}


/* Table styles */
table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 20px;
  font-size: 1rem;
  background-color: #fff;
}

/* Table header styling */
thead {
  background-color: #007bff;
  color: white;
}

thead th {
  padding: 12px;
  text-align: left;
  font-size: 1.1rem;
}

/* Table body styling */
tbody tr:nth-child(even) {
  background-color: #f2f2f2;
}

tbody td {
  padding: 10px;
  border-bottom: 1px solid #ddd;
  text-align: left;
  vertical-align: middle;
  color: #333;
}

tbody tr:hover {
  background-color: #e9ecef;
}

/* Responsive styles for smaller screens (e.g., mobile phones) */
@media (max-width: 768px) {
  div {
    padding: 1px;
    margin: 10px;
    max-width: 95%;
  }
/* /max-width: 95%: Ensures that the div doesn’t take more than 95% of the screen width. 
This helps maintain some space around the edges*/

  table {
    width: 100%;
    font-size: 0.8rem; /* Further adjust font size for smaller screens */
    overflow-x: auto;  /* Make table scrollable horizontally */
    display: block;
  }
  /*
/* General form container styling */
fieldset {
    border: 1px solid #ccc;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
    background-color: #f9f9f9;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  
  /* Labels and inputs alignment */
  label {
    display: block;
    font-size: 1.1rem;
    margin-bottom: 8px;
    color: #333;
  }
  
  input, select {
    width: 100%;
    padding: 10px;
    background-color: white; /* Set background to blue */
    color: black; /* Set text color to white for visibility */
    margin-bottom: 15px;
    font-size: 1rem;
    border-radius: 5px;
    border: 1px solid #ccc;
  }
  
  /* Button styling */
  button {
    padding: 10px 20px;
    background-color: blue;
    color: green;
    border: none;
    border-radius: 5px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s;
  }
  
  button:hover {
    background-color: blue;
  }
  
  /* Success message styling */
  .success-message {
    color: #28a745;
    font-weight: bold;
    font-size: 1.2rem;
    margin-top: 20px;
  }
  
  /* Table for budget list */
  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
  }
  
  th, td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }
  
  th {
    background-color: #007bff;
    color: white;
  }
  
  td {
    background-color: #f9f9f9;
  }
  
  tr:hover td {
    background-color: #e2e6ea;
  }
  
  h2 {
    font-size: 1.5rem;
    margin-bottom: 10px;
  }
  
  /* Responsive styles */
  @media (max-width: 768px) {
    input, select, button {
      font-size: 0.85rem;
      width: 100%;
    }
  
  /*
  overflow-x: auto: This ensures that if the table is too wide to fit on smaller screens, the user can scroll
   horizontally to see the hidden content. Without this property, parts of the table might be cut off or 
   overflow off-screen.
display: block: By default, tables are displayed as table elements, which maintain a strict grid-like structure. 
Changing display: block breaks this rigid structure, allowing more flexibility. 
This means the table will behave more like a div or block element and wrap to fit smaller screens if necessary. 
When you make a table block, each row or column can adapt more flexibly to fit the screen.
 */

 input[type="text"] {
  width: 95%;    /* Full width */
  font-size: 0.85rem;  /* Smaller input text */
  padding: 4px;  /* Less padding */
}

  thead {
    display: none; /* Hide table headers on mobile to simplify display */
  }
  /* display: none: Hides the table header (thead) completely on small screens. 
  Since headers would take up valuable space and make the table harder to fit*/

  tbody td {
    padding: 6px;
    display: block; /* Make table cells display as block elements */
    width: 100%;
    text-align: right; /* Align text to the right */
    position: relative;
    font-size: 0.9rem;
  }
  /*display: block: Converts each table cell (td) into a block-level element. This makes each cell span the full width of the screen rather than being arranged in rows. 
  This is essential for a vertical, card-style layout that fits better on mobile. */

  tbody td::before {
    content: attr(data-label); /* Use data-label attribute to show table headers */
    position: absolute;
    left: 0;
    text-align: left;
    font-weight: bold;
    padding-left: 10px;
  }

  /*content: attr(data-label): This is the key to making the table readable on mobile without the header.
   It uses the data-label attribute on the td elements to display the corresponding header for each cell. 
   This allows each cell to show both the value and the header text (e.g., "Category: Groceries").
position: absolute: The label is positioned absolutely within the table cell, allowing it to float over the content in a specific position.
left: 0: Positions the label at the left edge of the cell, ensuring that it’s aligned with the start of the content.
text-align: left: Ensures the label is left-aligned, keeping it distinct from the value (which is right-aligned).
font-weight: bold: Makes the label text bold to differentiate it from the cell's value.
padding-left: 10px: Adds some space between the left edge of the cell and the label, ensuring readability.
This results in each table row becoming more like a "card," with each cell showing a label (header) and a value (content).
  */

  tbody tr {
    margin-bottom: 10px;
    display: block; /* Make each row a block element */
  }
/* H1 Styling */

.heading-container {
  max-width: 250px;    /* Narrower for mobile */
  margin: 10px auto;   /* Less margin */
  padding: 5px;        /* Smaller padding */
}

.heading-container h1 {
  font-size: 1rem;     /* Smaller heading size */
  margin-bottom: 5px;  /* Reduce spacing */
  line-height: 1.1;    /* Compact line height */
  word-break: break-word; /* Ensure words don't overflow */
  letter-spacing: 0.5px; /* Maintain readability */
}

}
/*
margin-bottom: 10px: Adds space between each "row" (which is now displayed as a block). 
This separation makes it easier to distinguish between the rows on small screens.
display: block: Ensures each row (tr) becomes a block element.
 This helps stack each row vertically, essentially turning the table into a list-like structure for mobile views.
*/



}